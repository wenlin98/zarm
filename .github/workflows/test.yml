name: Test
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: install packages
        run: pnpm install --no-frozen-lockfile

  test-cli:
    name: Testing @zarm-design/cli on Node.js
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 16, 14, 12, 10]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          # codecov.io requires a fetch depth > 1.
          fetch-depth: 2

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: test
        run: pnpm --filter @zarm-design/cli run test --coverage

      - name: coverage
        run: bash <(curl -s https://codecov.io/bash)
    needs: setup

  compile-cli:
    name: Compile @zarm-design/cli
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: cache @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: cli-${{ github.sha }}

      - name: compile @zarm-design/cli
        run: pnpm --filter @zarm-design/cli run build
    needs: setup

  compile-bem:
    name: Compile @zarm-design/bem
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: restore cache from @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: cli-${{ github.sha }}

      - name: cache @zarm-design/bem
        uses: actions/cache@v3
        with:
          path: packages/bem/lib
          key: bem-${{ github.sha }}

      - name: compile @zarm-design/bem
        run: pnpm --filter @zarm-design/bem run build
    needs: compile-cli

  compile-icons:
    name: Compile @zarm-design/icons
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: restore cache from @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: cli-${{ github.sha }}

      - name: restore cache from @zarm-design/bem
        uses: actions/cache@v3
        with:
          path: packages/bem/lib
          key: bem-${{ github.sha }}

      - name: cache @zarm-design/icons
        uses: actions/cache@v3
        with:
          path: packages/zarm-icons/lib
          key: icons-${{ github.sha }}

      - name: compile @zarm-design/icons
        run: pnpm --filter @zarm-design/icons run build
    needs: compile-bem

  compile:
    name: Compile zarm
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: restore cache from @zarm-design/cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: cli-${{ github.sha }}

      - name: restore cache from @zarm-design/bem
        uses: actions/cache@v3
        with:
          path: packages/bem/lib
          key: bem-${{ github.sha }}

      - name: restore cache from @zarm-design/icons
        uses: actions/cache@v3
        with:
          path: packages/zarm-icons/lib
          key: icons-${{ github.sha }}

      - name: compile
        run: |
          pnpm --filter zarm run build:es
          pnpm --filter zarm run build:lib
    needs: compile-icons

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: lint
        run: pnpm lint
    needs: setup

  dist:
    name: Dist
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: cache dist
        uses: actions/cache@v3
        with:
          path: packages/zarm/dist
          key: dist-${{ github.sha }}

      - name: dist
        run: pnpm --filter zarm run build:umd
        env:
          NODE_OPTIONS: --max_old_space_size=4096
    needs: compile-cli

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        react: ['16', '17', '18']
        module: ['dom', 'dist']
    env:
      REACT: ${{ matrix.react }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          # codecov.io requires a fetch depth > 1.
          fetch-depth: 2

      - name: install pnpm
        run: corepack enable

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: restore cache from node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: restore cache from cli
        uses: actions/cache@v3
        with:
          path: packages/zarm-cli/dist
          key: cli-${{ github.sha }}

      - name: restore cache from dist
        if: ${{ matrix.module == 'dist' }}
        uses: actions/cache@v3
        with:
          path: packages/zarm/dist
          key: dist-${{ github.sha }}

      - name: install react 16
        if: ${{ matrix.react == '16' }}
        run: pnpm --filter zarm run install-react-16

      - name: install react 18
        if: ${{ matrix.react == '18' }}
        run: pnpm --filter zarm run install-react-18

      - name: check dist
        if: ${{ matrix.module == 'dist' }}
        run: pnpm --filter zarm node ./tests/dekko/dist.test.js

      - name: check bundlesize
        if: ${{ matrix.module == 'dist' }}
        run: pnpm --filter zarm npx bundlesize
        env:
          BUNDLESIZE_GITHUB_TOKEN: ${{ secrets.BUNDLESIZE_GITHUB_TOKEN }}

      - name: test
        if: ${{ matrix.module == 'dom' }}
        run: pnpm --filter zarm run coverage

      - name: coverage
        if: ${{ matrix.module == 'dom' && matrix.react == '17' }}
        run: bash <(curl -s https://codecov.io/bash)
    needs: [setup, dist, compile-cli]
